{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Endriti\\\\Desktop\\\\LAB\\\\AnkandiFront\\\\ankandireact\\\\src\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from './src';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => {\n    const currentUser = authenticationService.currentUserValue;\n\n    if (!currentUser) {\n      // not logged in so redirect to login page with the return url\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    } // authorised so return component\n\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Endriti/Desktop/LAB/AnkandiFront/ankandireact/src/PrivateRoute.jsx"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","component","Component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,qBAAT,QAAsC,OAAtC;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACxB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAI;AAC9B,UAAMC,WAAW,GAAGN,qBAAqB,CAACO,gBAA1C;;AACA,QAAI,CAACD,WAAL,EAAkB;AACd;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAL6B,CAO9B;;;AACA,wBAAO,QAAC,SAAD,OAAeN;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AATD;AAAA;AAAA;AAAA;AAAA,QADG;KAAMJ,Y","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from './src';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)"]},"metadata":{},"sourceType":"module"}